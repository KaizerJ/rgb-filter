package com.mycompany.rgb.filter;

import javax.swing.JCheckBox;


public class MainFrame extends javax.swing.JFrame {

    private int selectedColors = 3;

    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoPosButtonGroup = new javax.swing.ButtonGroup();
        rgbPanel = new javax.swing.JPanel();
        allcbox = new javax.swing.JCheckBox();
        redcbox = new javax.swing.JCheckBox();
        bluecbox = new javax.swing.JCheckBox();
        greencbox = new javax.swing.JCheckBox();
        logoPosPanel = new javax.swing.JPanel();
        upperLeftrbutton = new javax.swing.JRadioButton();
        lowerLeftrbutton = new javax.swing.JRadioButton();
        upperRightrbutton = new javax.swing.JRadioButton();
        lowerRightrbutton = new javax.swing.JRadioButton();
        lienzo = new com.mycompany.rgb.filter.Lienzo();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Filtrar componentes RGB");

        rgbPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Mostrar RGB"));

        allcbox.setSelected(true);
        allcbox.setText("Todos");
        allcbox.setEnabled(false);
        allcbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                allcboxItemStateChanged(evt);
            }
        });

        redcbox.setSelected(true);
        redcbox.setText("Rojo");
        redcbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                redcboxItemStateChanged(evt);
            }
        });

        bluecbox.setSelected(true);
        bluecbox.setText("Azul");
        bluecbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bluecboxItemStateChanged(evt);
            }
        });

        greencbox.setSelected(true);
        greencbox.setText("Verde");
        greencbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                greencboxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout rgbPanelLayout = new javax.swing.GroupLayout(rgbPanel);
        rgbPanel.setLayout(rgbPanelLayout);
        rgbPanelLayout.setHorizontalGroup(
            rgbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rgbPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rgbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(allcbox)
                    .addComponent(redcbox)
                    .addComponent(bluecbox)
                    .addComponent(greencbox))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        rgbPanelLayout.setVerticalGroup(
            rgbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rgbPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(allcbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(redcbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bluecbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(greencbox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        logoPosPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Posici√≥n del logo"));

        logoPosButtonGroup.add(upperLeftrbutton);
        upperLeftrbutton.setSelected(true);
        upperLeftrbutton.setText("Arriba Izquierda");
        upperLeftrbutton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                upperLeftrbuttonItemStateChanged(evt);
            }
        });

        logoPosButtonGroup.add(lowerLeftrbutton);
        lowerLeftrbutton.setText("Abajo Izquierda");
        lowerLeftrbutton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lowerLeftrbuttonItemStateChanged(evt);
            }
        });

        logoPosButtonGroup.add(upperRightrbutton);
        upperRightrbutton.setText("Arriba Derecha");
        upperRightrbutton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        upperRightrbutton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                upperRightrbuttonItemStateChanged(evt);
            }
        });

        logoPosButtonGroup.add(lowerRightrbutton);
        lowerRightrbutton.setText("Abajo Derecha");
        lowerRightrbutton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        lowerRightrbutton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lowerRightrbuttonItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout logoPosPanelLayout = new javax.swing.GroupLayout(logoPosPanel);
        logoPosPanel.setLayout(logoPosPanelLayout);
        logoPosPanelLayout.setHorizontalGroup(
            logoPosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoPosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(logoPosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(upperLeftrbutton)
                    .addComponent(lowerLeftrbutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(logoPosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(upperRightrbutton)
                    .addComponent(lowerRightrbutton))
                .addContainerGap())
        );
        logoPosPanelLayout.setVerticalGroup(
            logoPosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoPosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(logoPosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(upperLeftrbutton)
                    .addComponent(upperRightrbutton))
                .addGap(18, 18, 18)
                .addGroup(logoPosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lowerLeftrbutton)
                    .addComponent(lowerRightrbutton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout lienzoLayout = new javax.swing.GroupLayout(lienzo);
        lienzo.setLayout(lienzoLayout);
        lienzoLayout.setHorizontalGroup(
            lienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        lienzoLayout.setVerticalGroup(
            lienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 768, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lienzo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rgbPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logoPosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 648, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(logoPosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rgbPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lienzo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void redcboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_redcboxItemStateChanged
        if(redcbox.isSelected()){
            this.lienzo.setRedState(true);
            selectedColors++;
            enableRGBcboxes();
        }else {
            this.lienzo.setRedState(false);
            unselectAllCheckBox();
        }
        this.lienzo.repaint();
    }//GEN-LAST:event_redcboxItemStateChanged

    private void allcboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_allcboxItemStateChanged
        if(allcbox.isSelected()){
            redcbox.setSelected(true);
            greencbox.setSelected(true);
            bluecbox.setSelected(true);
            allcbox.setEnabled(false);
            this.selectedColors = 3;
            enableRGBcboxes();
        }
    }//GEN-LAST:event_allcboxItemStateChanged

    private void bluecboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bluecboxItemStateChanged
        if(bluecbox.isSelected()){
            this.lienzo.setBlueState(true);
            selectedColors++;
            enableRGBcboxes();
        }else {
            this.lienzo.setBlueState(false);
            unselectAllCheckBox();
        }
        this.lienzo.repaint();
    }//GEN-LAST:event_bluecboxItemStateChanged

    private void greencboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_greencboxItemStateChanged
        if(greencbox.isSelected()){
            this.lienzo.setGreenState(true);
            selectedColors++;
            enableRGBcboxes();
        }else {
            this.lienzo.setGreenState(false);
            unselectAllCheckBox();
        }
        this.lienzo.repaint();
    }//GEN-LAST:event_greencboxItemStateChanged

    private void upperLeftrbuttonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_upperLeftrbuttonItemStateChanged
        if(this.upperLeftrbutton.isSelected()){
            this.lienzo.setLogoPos(Lienzo.LogoPos.UPPER_LEFT);
            this.lienzo.repaint();
        }
    }//GEN-LAST:event_upperLeftrbuttonItemStateChanged

    private void upperRightrbuttonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_upperRightrbuttonItemStateChanged
        if(this.upperRightrbutton.isSelected()){
            this.lienzo.setLogoPos(Lienzo.LogoPos.UPPER_RIGHT);
            this.lienzo.repaint();
        }
    }//GEN-LAST:event_upperRightrbuttonItemStateChanged

    private void lowerLeftrbuttonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lowerLeftrbuttonItemStateChanged
        if(this.lowerLeftrbutton.isSelected()){
            this.lienzo.setLogoPos(Lienzo.LogoPos.LOWER_LEFT);
            this.lienzo.repaint();
        }
    }//GEN-LAST:event_lowerLeftrbuttonItemStateChanged

    private void lowerRightrbuttonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lowerRightrbuttonItemStateChanged
        if(this.lowerRightrbutton.isSelected()){
            this.lienzo.setLogoPos(Lienzo.LogoPos.LOWER_RIGHT);
            this.lienzo.repaint();
        }
    }//GEN-LAST:event_lowerRightrbuttonItemStateChanged

    private void unselectAllCheckBox(){
        allcbox.setSelected(false);
        allcbox.setEnabled(true);
        selectedColors--;
        if( selectedColors == 1){
            disableRemainingSelectedCheckBox();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(
                    javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox allcbox;
    private javax.swing.JCheckBox bluecbox;
    private javax.swing.JCheckBox greencbox;
    private com.mycompany.rgb.filter.Lienzo lienzo;
    private javax.swing.ButtonGroup logoPosButtonGroup;
    private javax.swing.JPanel logoPosPanel;
    private javax.swing.JRadioButton lowerLeftrbutton;
    private javax.swing.JRadioButton lowerRightrbutton;
    private javax.swing.JCheckBox redcbox;
    private javax.swing.JPanel rgbPanel;
    private javax.swing.JRadioButton upperLeftrbutton;
    private javax.swing.JRadioButton upperRightrbutton;
    // End of variables declaration//GEN-END:variables

    private void disableRemainingSelectedCheckBox() {
        JCheckBox[] cboxes = {redcbox, greencbox, bluecbox};
        for (JCheckBox cbox : cboxes) {
            if(cbox.isSelected()){
                cbox.setEnabled(false);
                break;
            }
        }
    }

    private void enableRGBcboxes() {
        redcbox.setEnabled(true);
        greencbox.setEnabled(true);
        bluecbox.setEnabled(true);
        if(selectedColors == 3){
            allcbox.setSelected(true);
            allcbox.setEnabled(false);
        }
    }
}
